name: Backend CI/CD

on:
  push:
    branches:
      - master

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    env:
      NODE_ENV: production
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      CLIENT_URL: ${{ secrets.CLIENT_URL }}
      EMAIL_USER: ${{ secrets.EMAIL_USER }}
      EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
      REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
      CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
      CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
      CLOUDINARY_URL: ${{ secrets.CLOUDINARY_URL }}

    steps:
      - name: üßæ Checkout code
        uses: actions/checkout@v3

      - name: ‚öôÔ∏è Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: üíæ Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: üì¶ Install dependencies (including dev)
        run: npm ci

      - name: üõ† Run DB migrations
        run: npm run migrate

      - name: üß™ Run unit tests
        run: npx jest tests/unit --watchAll=false

      - name: üîå Run integration tests
        run: npx jest --testPathPattern=tests/integration --watchAll=false
